_HiStOrY_V2_
PATH="/Applications/Postgres.app/Contents/MacOS/bin:$PATH"\^Ashow\040databases;
exit\012quit\012;
exit;
quit;
select\040version();
select\040current_date;
select\0402+2;



create\040table\040weather\^Ashow\040tables;

create\040table\040test;
create\040table\040weather();

drop\040table\040weather;
CREATE\040TABLE\040brands(id\040int,\040name\040varchar(80),\040q_score\040real,\040is_matched\040boolean);

drop\040table\040brands\^A;
CREATE\040TABLE\040brands(id\040int,\040name\040varchar(200),\040q_score\040real,\040is_matched\040boolean);
drop\040table\040brands\^A;
CREATE\040TABLE\040brands(id\040int,\040name\040varchar(100),\040q_score\040real,\040is_matched\040boolean);
drop\040table\040brands;
CREATE\040TABLE\040brands(id\040int,\040name\040varchar(80),\040q_score\040real,\040is_matched\040boolean);
create\040table\040logo_urls(id\040brand_id\040int,\040url\040varchar(2000),\040source\040varchar(80),\040q_score\040real);
create\040table\040logo_urls(brand_id\040int,\040url\040varchar(2000),\040source\040varchar(80),\040q_score\040real);
create\040table\040site_urls(brand_id\040int,\040url\040varchar(2000),\040source\040varchar(80),\040q_score\040real);
show\040tables;


CREATE\040TABLE\040brands(id\040int,\040name\040varchar(100),\040q_score\040real,\040is_matched\040boolean);
create\040table\040logo_urls(brand_id\040int,\040url\040varchar(2000),\040source\040varchar(80),\040q_score\040real);
create\040table\040site_urls(brand_id\040int,\040url\040varchar(2000),\040source\040varchar(20),\040q_score\040real);
drop\040table\040logo_urls;
create\040table\040logo_urls(brand_id\040int,\040url\040varchar(2000),\040source\040varchar(20),\040q_score\040real);


drop\040table\040if\040exists\040books,\040authors,\040testing,\040images;
createble\040if\040not\040exists\040authors\040(id\040serial\040primary\040key,\040name\040varchar(25));
create\040table\040if\040not\040exists\040authors\040(id\040serial\040primary\040key,\040name\040varchar(25));
show\040indexes\040from\040authors;



CREATE\040TABLE\040IF\040NOT\040EXISTS\040books\040(\^A\040\040\040\040id\040serial\040PRIMARY\040KEY,\040\^A\040\040\040\040author_id\040INT\040references\040authors(id),\040title\040VARCHAR(100)\^A);
CREATE\040TABLE\040IF\040NOT\040EXISTS\040testing(id\040INT);
CREATE\040TABLE\040IF\040NOT\040EXISTS\040images(id\040serial,\040data\040bytea);
INSERT\040INTO\040authors(id,\040name)\040VALUES(1,\040'Jack\040London');
INSERT\040INTO\040authors(id,\040name)\040VALUES(2,\040'Honore\040de\040Balzac');
INSERT\040INTO\040authors(id,\040name)\040VALUES(3,\040'Lion\040Feuchtwanger');
INSERT\040INTO\040authors(id,\040name)\040VALUES(4,\040'Emile\040Zola');
INSERT\040INTO\040authors(id,\040name)\040VALUES(5,\040'Truman\040Capote');
INSERT\040INTO\040books(id,\040author_id,\040title)\040VALUES(1,\0401,\040'Call\040of\040the\040Wild');
INSERT\040INTO\040books(id,\040author_id,\040title)\040VALUES(2,\0401,\040'Martin\040Eden');
INSERT\040INTO\040books(id,\040author_id,\040title)\040VALUES(3,\0402,\040'Old\040Goriot');
INSERT\040INTO\040books(id,\040author_id,\040title)\040VALUES(4,\0402,\040'Cousin\040Bette');
INSERT\040INTO\040books(id,\040author_id,\040title)\040VALUES(5,\0403,\040'Jew\040Suess');
INSERT\040INTO\040books(id,\040author_id,\040title)\040VALUES(6,\0404,\040'Nana');
INSERT\040INTO\040books(id,\040author_id,\040title)\040VALUES(7,\0404,\040'The\040Belly\040of\040Paris');
INSERT\040INTO\040books(id,\040author_id,\040title)\040VALUES(8,\0405,\040'In\040Cold\040blood');
INSERT\040INTO\040books(id,\040author_id,\040title)\040VALUES(9,\0405,\040'Breakfast\040at\040Tiffany');




SELECT\040*\040FROM\040authors;

SELECT\040*\040FROM\040testing;
SELECT\040name,\040title\040FROM\040authors,\040books\040WHERE\040authors.id=books.author_id;
SELECT\040*\040FROM\040friends;


create\040table\040brands(id\040int,\040name\040varchar(200),\040is_matched\040boolean,\040q_score\040real);
select\040*\040from\040brands;
INSERT\040INTO\040brands(id,\040name,\040is_matched,\040q_score)\040VALUES(1,\040Adidas,\040true,\0400);
select\040*\040from\040bra
\134di
\134d
\134d\040books_pkey
show\040create\040table\040brands\012;
SHOW\040CREATE\040TABLE\040brands;
pg_dump\040--schema-only\040-t\040brands\012;
\134q
pg_dump\040--schema-only\040-t\040brands\012;
pg_dump\040--help\012;
\134q
select\040count(*)\040from\040brands;
\134q
\134d
select\040count(*)\040from\040brands;
select\040count(*)\040from\040logo_urls;
select\040count(*)\040from\040site_urls;
ALTER\040TABLE\040brands\040ALTER\040COLUMN\040id\040TYPE\040int(10)\040unsigned;
\134d\040brands
\134di\040brands
\134di\040logo_urls
/d
\134d
\134di\040brands
\134d\040brands
\134l\040popshops
\134d\040brands
\134d+\040brands
\134d
select\040*\040from\040brands\040limit\04010;
select\040*\040from\040brands\040limit\04010;
selet\040*\040from\040site_urls\040limit\0405;
select\040*\040from\040site_urls\040limit\0405;
select\040*\040from\040logo_urls\040limit\0405;
